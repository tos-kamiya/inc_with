#!/usr/bin/env python3

import os
import shlex
import sys
import subprocess

from getch import getch


__doc__ = """inc_with, run command with adding parameters incrementally.

Run a command once as command-line arguments.
Give parameters of the command interactively, incrementally in a session.
To quit the session, type [ESC].

usage: inc_with COMMAND
"""


def main(argv):
    args = argv[1:]
    if not args or args[0] in ('-h', '--help'):
        print(__doc__)
        sys.exit(0)

    cmd0 = args
    paramstr = ''
    while True:
        terminal_lines = os.get_terminal_size().lines
        paramstr_error = False

        try:
            params = shlex.split(paramstr)
        except ValueError:  # no closing quotation
            paramstr_error = True

        if not paramstr_error:
            if paramstr:
                qcmd = cmd0 + params
            else:
                qcmd = cmd0[:]
            # print("qcmd=%s" % repr(qcmd))
            while qcmd and qcmd[-1] == '':
                qcmd = qcmd[:-1]

            hcmd = ["head", "-n", "%d" % terminal_lines]
            s1 = subprocess.Popen(qcmd, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
            output = subprocess.check_output(hcmd, stdin=s1.stdout)
            
            print("\033[2J\033[1;1f")  # clear screen
            print(output.decode('utf-8'))
            print("# %s %s>" % (' '.join(cmd0), paramstr), end='', flush=True)
        else:
            print("\033[2J\033[1;1f")  # clear screen
            print("# %s %s>" % (' '.join(cmd0), paramstr), end='', flush=True)

        c = getch()
        if c == '\x1b':  # esc
            break  # while True
        elif c == '\x7f':  # bs
            paramstr = paramstr[:-1]
        else:
            # print("key=%s" % repr(c))
            paramstr = paramstr + c


if __name__ == '__main__':
    main(sys.argv)

