#!/usr/bin/env python3

import os
import shlex
import sys
import subprocess

from getch import getch


__doc__ = """inc_with, run command with giving parameters incrementally.

Make an interactive session of the given command line.
In the session, you can give parameters to the command line in an incremental way,
that is, every time you type a character, the command line executed repeatedly.
To quit the session, type [ESC].

Usage: inc_with COMMAND
"""


def main(argv):
    args = argv[1:]
    if not args or args[0] in ('-h', '--help'):
        print(__doc__)
        sys.exit(0)

    raw_write = sys.stdout.buffer.write
    cmd0 = args
    paramstr = ''
    while True:
        terminal_lines = os.get_terminal_size().lines

        try:
            params = shlex.split(paramstr)
            qcmd = cmd0 + params
            # print("qcmd=%s" % repr(qcmd))
            hcmd = ["head", "-n", "%d" % terminal_lines]

            s1 = subprocess.Popen(qcmd, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
            output = subprocess.check_output(hcmd, stdin=s1.stdout)
        except ValueError:  # no closing quotation
            output = None

        raw_write(b"\033[2J\033[1;1f")  # clear screen
        if output:
            raw_write(output)
            if not output.endswith(b'\n'):
                raw_write(b'\n')
        raw_write(("# %s %s>" % (' '.join(cmd0), paramstr)).encode('utf-8'))
        sys.stdout.flush()

        c = getch()
        if c == '\x1b':  # esc
            break  # while True
        elif c == '\x7f':  # bs
            paramstr = paramstr[:-1]
        else:
            # print("key=%s" % repr(c))
            paramstr = paramstr + c


if __name__ == '__main__':
    main(sys.argv)

