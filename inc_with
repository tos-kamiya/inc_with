#!/usr/bin/env python3

import os
import sys
import pexpect

from getch import getch


__doc__ = """inc_with, run command with giving parameters incrementally.

Make an interactive session of the given command line. In the session, 
you can give parameters to the command line in an incremental way, 
that is, every time you type a character, the command line executed repeatedly.
To quit the session, type [ESC].

Usage: inc_with COMMAND
"""


def main(argv):
    args = argv[1:]
    if not args or args[0] in ('-h', '--help'):
        print(__doc__)
        sys.exit(0)

    raw_write = sys.stdout.buffer.write
    cmd0 = ' '.join(args)
    paramstr = ''
    while True:
        terminal_lines = os.get_terminal_size().lines

        cmd = 'unbuffer %s %s | head -n %d' % (cmd0, paramstr, terminal_lines - 1)
        child = pexpect.spawn('/bin/bash', ['-c', cmd])
        child.expect(pexpect.EOF)
        output = child.before.replace(b'\r\n', b'\n')

        raw_write(b"\033[2J\033[1;1f")  # clear screen
        raw_write(output)
        if not output.endswith(b'\n'):
            raw_write(b'\n')
        raw_write(("# %s %s>" % (cmd0, paramstr)).encode('utf-8'))
        sys.stdout.flush()

        c = getch()
        if c == '\x1b':  # esc
            raw_write('\n')
            break  # while True
        elif c == '\x7f':  # bs
            paramstr = paramstr[:-1]
        else:
            # print("key=%s" % repr(c))
            paramstr = paramstr + c


if __name__ == '__main__':
    main(sys.argv)

