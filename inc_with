#!/usr/bin/env python3

import os
import shlex
import sys
import pexpect

from getch import getch


__doc__ = """inc_with, run command with giving parameters incrementally.

Make an interactive session of the given command line. In the session,
you can give parameters to the command line in an incremental way,
that is, every time you type a character, the command line executed repeatedly.
To quit the session, type [ESC].

Usage: inc_with COMMAND
"""

CLEAR_SCREEN = b"\033[2J\033[1;1f"
BOLD = b'\033[1m'
NORMAL = b'\033[0m'


def main(argv):
    args = argv[1:]
    if not args or args[0] in ('-h', '--help'):
        print(__doc__)
        sys.exit(0)

    raw_write = sys.stdout.buffer.write
    cmd0 = ' '.join(shlex.quote(a) for a in args)
    paramstr = ''
    while True:
        try:
            params = shlex.split(paramstr)
        except ValueError:  # perhaps "No closing quotation" error
            output = None
        else:
            cmd = '%s %s' % (cmd0, paramstr)
            child = pexpect.spawn('/bin/bash', ['-c', cmd])
            child.expect(pexpect.EOF)
            output = child.before.replace(b'\r\n', b'\n')

        raw_write(CLEAR_SCREEN)
        if output:
            raw_write(output)
            if not output.endswith(b'\n'):
                raw_write(b'\n')
        raw_write(BOLD + ("%s %s" % (cmd0, paramstr)).encode('utf-8') + NORMAL)
        sys.stdout.flush()

        c = getch()
        if c in ('\x1b', '\x03', '\x04'):  # esc, ctrl+c or ctrl+d
            raw_write(b'\n')
            break  # while True
        elif c == '\x7f':  # bs
            paramstr = paramstr[:-1]
        else:
            # print("key=%s" % repr(c))
            paramstr = paramstr + c


if __name__ == '__main__':
    main(sys.argv)
